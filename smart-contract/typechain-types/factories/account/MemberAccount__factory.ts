/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MemberAccount,
  MemberAccountInterface,
} from "../../account/MemberAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_protocol",
        type: "address",
      },
      {
        internalType: "address",
        name: "_cryptography",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_pubKey",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_sendKey",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_receiveKey",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_signNonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_signerDepositFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_protocolFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_joinFee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "UpdateSignIndex",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sigR",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sigS",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bidSigner",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimRefundSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "createMR",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getMRValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getMoneyRecordState",
    outputs: [
      {
        internalType: "enum State",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSignIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSignKey",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseSignIndex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "lockMR",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "moneyRecord",
    outputs: [
      {
        internalType: "uint256",
        name: "money",
        type: "uint256",
      },
      {
        internalType: "enum State",
        name: "state",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "e",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "s",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sigR",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sigS",
        type: "uint256",
      },
    ],
    name: "onBoard",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "processMR",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "money",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rho",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "delta",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "omega",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sigma",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sigR",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sigS",
        type: "uint256",
      },
    ],
    name: "receiveTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "registerInitialMember",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "e",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sigR",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sigS",
        type: "uint256",
      },
    ],
    name: "sendReferRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "e",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sigR",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sigS",
        type: "uint256",
      },
    ],
    name: "sendTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_signIndex",
        type: "uint256",
      },
    ],
    name: "setSignIndex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "s",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sigR",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sigS",
        type: "uint256",
      },
    ],
    name: "signReferRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "e",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "r",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sigR",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sigS",
        type: "uint256",
      },
    ],
    name: "signTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sigR",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sigS",
        type: "uint256",
      },
    ],
    name: "startRequestRefer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "unlockMR",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101a06040523480156200001257600080fd5b5060405162002cc938038062002cc9833981810160405281019062000038919062000280565b88600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a290620003c0565b60405180910390fd5b88600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200011e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200011590620003c0565b60405180910390fd5b8a73ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508973ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508861010081815250508760c081815250508660e08181525050436003819055508561012081815250508461014081815250508361016081815250508261018081815250505050505050505050505050620003e2565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200020d82620001e0565b9050919050565b6200021f8162000200565b81146200022b57600080fd5b50565b6000815190506200023f8162000214565b92915050565b6000819050919050565b6200025a8162000245565b81146200026657600080fd5b50565b6000815190506200027a816200024f565b92915050565b60008060008060008060008060006101208a8c031215620002a657620002a5620001db565b5b6000620002b68c828d016200022e565b9950506020620002c98c828d016200022e565b9850506040620002dc8c828d0162000269565b9750506060620002ef8c828d0162000269565b9650506080620003028c828d0162000269565b95505060a0620003158c828d0162000269565b94505060c0620003288c828d0162000269565b93505060e06200033b8c828d0162000269565b9250506101006200034f8c828d0162000269565b9150509295985092959850929598565b600082825260208201905092915050565b7f416464726573732063616e6e6f74206265206e756c6c00000000000000000000600082015250565b6000620003a86016836200035f565b9150620003b58262000370565b602082019050919050565b60006020820190508181036000830152620003db8162000399565b9050919050565b60805160a05160c05160e051610100516101205161014051610160516101805161279262000537600039600081816111d601526114370152600081816111f7015261145801526000818161172001526118260152600050506000610b350152600081816105b00152818161089e01528181610c9001528181610f96015281816112d30152818161154a015261190601526000611b760152600081816105710152818161085f01528181610c5101528181610f57015281816112940152818161150b015281816118c70152611b37015260008181610670015281816107070152818161095e01528181610b8801528181610d1a01528181610dce01528181611056015281816110ed0152818161115201528181611396015281816113fb0152818161160a0152818161169e01528181611785015281816117ea01528181611a3801528181611c360152611cca01526127926000f3fe60806040526004361061014f5760003560e01c80637d7a043e116100b6578063b866c8a41161006f578063b866c8a414610432578063b9b4a4281461045b578063d7a69ed914610484578063da9c2842146104c2578063e2296534146104eb578063e249c6601461051457610156565b80637d7a043e146103855780637e8c7aac146103a1578063896ea351146103bd578063a1f82304146103e6578063a8e47b48146103fd578063ae2b3bab1461040757610156565b806333e2a6131161010857806333e2a613146102675780634a02ece5146102a45780635200bce8146102cd57806360a26b49146102f65780636c4f6fe9146103335780637474b5e11461035c57610156565b80630267a1191461015b5780630f3d43ed1461018457806325e1ef53146101ad5780632b603c71146101d65780632e1a7d4d14610213578063329c833e1461023c57610156565b3661015657005b600080fd5b34801561016757600080fd5b50610182600480360381019061017d9190611e88565b61053d565b005b34801561019057600080fd5b506101ab60048036038101906101a69190611f03565b610705565b005b3480156101b957600080fd5b506101d460048036038101906101cf9190611f30565b610829565b005b3480156101e257600080fd5b506101fd60048036038101906101f89190611fd2565b6109f9565b60405161020a919061200e565b60405180910390f35b34801561021f57600080fd5b5061023a60048036038101906102359190611f03565b610a11565b005b34801561024857600080fd5b50610251610b31565b60405161025e919061200e565b60405180910390f35b34801561027357600080fd5b5061028e60048036038101906102899190611f03565b610b59565b60405161029b91906120a0565b60405180910390f35b3480156102b057600080fd5b506102cb60048036038101906102c69190611f03565b610b86565b005b3480156102d957600080fd5b506102f460048036038101906102ef91906120bb565b610c1f565b005b34801561030257600080fd5b5061031d60048036038101906103189190611f03565b610dac565b60405161032a919061200e565b60405180910390f35b34801561033f57600080fd5b5061035a60048036038101906103559190611f03565b610dcc565b005b34801561036857600080fd5b50610383600480360381019061037e91906120bb565b610f25565b005b61039f600480360381019061039a9190611f03565b6110e8565b005b6103bb60048036038101906103b691906120bb565b6111d4565b005b3480156103c957600080fd5b506103e460048036038101906103df9190612122565b6114d9565b005b3480156103f257600080fd5b506103fb61169c565b005b61040561171e565b005b34801561041357600080fd5b5061041c61188b565b604051610429919061200e565b60405180910390f35b34801561043e57600080fd5b5061045960048036038101906104549190612189565b611895565b005b34801561046757600080fd5b50610482600480360381019061047d9190611f03565b6119e9565b005b34801561049057600080fd5b506104ab60048036038101906104a69190611f03565b611a05565b6040516104b99291906121dc565b60405180910390f35b3480156104ce57600080fd5b506104e960048036038101906104e49190611f03565b611a36565b005b3480156104f757600080fd5b50610512600480360381019061050d91906120bb565b611b05565b005b34801561052057600080fd5b5061053b60048036038101906105369190611f03565b611cc8565b005b600085858560405160200161055493929190612214565b6040516020818303038152906040528051906020012060001c90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663592e306d8285857f00000000000000000000000000000000000000000000000000000000000000006040518563ffffffff1660e01b81526004016105ee949392919061224b565b602060405180830381865afa15801561060b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062f91906122c8565b61066e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066590612352565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630bcb2de58787876040518463ffffffff1660e01b81526004016106cb93929190612214565b600060405180830381600087803b1580156106e557600080fd5b505af11580156106f9573d6000803e3d6000fd5b50505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610793576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078a906123e4565b60405180910390fd5b60018060008282546107a59190612433565b925050819055506040518060400160405280828152602001600160038111156107d1576107d0612029565b5b8152506002600060015481526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff0219169083600381111561081e5761081d612029565b5b021790555090505050565b600086868686604051602001610842949392919061224b565b6040516020818303038152906040528051906020012060001c90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663592e306d8285857f00000000000000000000000000000000000000000000000000000000000000006040518563ffffffff1660e01b81526004016108dc949392919061224b565b602060405180830381865afa1580156108f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091d91906122c8565b61095c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095390612352565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663281dbdda89898989896040518663ffffffff1660e01b81526004016109bd959493929190612467565b600060405180830381600087803b1580156109d757600080fd5b505af11580156109eb573d6000803e3d6000fd5b505050505050505050505050565b60006020528060005260406000206000915090505481565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115610a92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8990612506565b60405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ae09190612526565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610b2d573d6000803e3d6000fd5b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60006002600083815260200190815260200160002060010160009054906101000a900460ff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bde57600080fd5b600280600083815260200190815260200160002060010160006101000a81548160ff02191690836003811115610c1757610c16612029565b5b021790555050565b60008484604051602001610c3492919061255a565b6040516020818303038152906040528051906020012060001c90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663592e306d8285857f00000000000000000000000000000000000000000000000000000000000000006040518563ffffffff1660e01b8152600401610cce949392919061224b565b602060405180830381865afa158015610ceb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0f91906122c8565b610d1857600080fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663583ae9bd86866040518363ffffffff1660e01b8152600401610d7392919061255a565b600060405180830381600087803b158015610d8d57600080fd5b505af1158015610da1573d6000803e3d6000fd5b505050505050505050565b600060026000838152602001908152602001600020600001549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e51906123e4565b60405180910390fd5b60016003811115610e6e57610e6d612029565b5b6002600083815260200190815260200160002060010160009054906101000a900460ff166003811115610ea457610ea3612029565b5b14610ee4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610edb906125cf565b60405180910390fd5b600280600083815260200190815260200160002060010160006101000a81548160ff02191690836003811115610f1d57610f1c612029565b5b021790555050565b60008484604051602001610f3a92919061255a565b6040516020818303038152906040528051906020012060001c90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663592e306d8285857f00000000000000000000000000000000000000000000000000000000000000006040518563ffffffff1660e01b8152600401610fd4949392919061224b565b602060405180830381865afa158015610ff1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101591906122c8565b611054576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104b90612352565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16638fab994986866040518363ffffffff1660e01b81526004016110af92919061255a565b600060405180830381600087803b1580156110c957600080fd5b505af11580156110dd573d6000803e3d6000fd5b505050505050505050565b6111117f0000000000000000000000000000000000000000000000000000000000000000611db6565b611150576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111479061263b565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633c181adb826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156111b857600080fd5b505af11580156111cc573d6000803e3d6000fd5b505050505050565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006112209190612433565b341015611262576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611259906126a7565b60405180910390fd5b6000848460405160200161127792919061255a565b6040516020818303038152906040528051906020012060001c90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663592e306d8285857f00000000000000000000000000000000000000000000000000000000000000006040518563ffffffff1660e01b8152600401611311949392919061224b565b602060405180830381865afa15801561132e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135291906122c8565b611391576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138890612352565b60405180910390fd5b6113ba7f0000000000000000000000000000000000000000000000000000000000000000611db6565b6113f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113f09061263b565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630eae1a2e7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006114819190612433565b87876040518463ffffffff1660e01b81526004016114a092919061255a565b6000604051808303818588803b1580156114b957600080fd5b505af11580156114cd573d6000803e3d6000fd5b50505050505050505050565b600084846040516020016114ee9291906126c7565b6040516020818303038152906040528051906020012060001c90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663592e306d8285857f00000000000000000000000000000000000000000000000000000000000000006040518563ffffffff1660e01b8152600401611588949392919061224b565b602060405180830381865afa1580156115a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c991906122c8565b611608576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ff90612352565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ece3884286866040518363ffffffff1660e01b81526004016116639291906126c7565b600060405180830381600087803b15801561167d57600080fd5b505af1158015611691573d6000803e3d6000fd5b505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e7e2507b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561170457600080fd5b505af1158015611718573d6000803e3d6000fd5b50505050565b7f00000000000000000000000000000000000000000000000000000000000000003414611780576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117779061273c565b60405180910390fd5b6117a97f0000000000000000000000000000000000000000000000000000000000000000611db6565b6117e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117df9061263b565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630990b91c7f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016000604051808303818588803b15801561187057600080fd5b505af1158015611884573d6000803e3d6000fd5b5050505050565b6000600354905090565b600033846040516020016118aa9291906126c7565b6040516020818303038152906040528051906020012060001c90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663592e306d8285857f00000000000000000000000000000000000000000000000000000000000000006040518563ffffffff1660e01b8152600401611944949392919061224b565b602060405180830381865afa158015611961573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061198591906122c8565b61198e57600080fd5b836000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546119dc9190612433565b9250508190555050505050565b80600360008282546119fb9190612433565b9250508190555050565b60026020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16905082565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611ac4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611abb906123e4565b60405180910390fd5b806003819055507f4aad1cf2e8f15b9fed114aba315ed8d80bca578efa3c4eb59fd31f62374a73b481604051611afa919061200e565b60405180910390a150565b60008484604051602001611b1a92919061255a565b6040516020818303038152906040528051906020012060001c90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663592e306d8285857f00000000000000000000000000000000000000000000000000000000000000006040518563ffffffff1660e01b8152600401611bb4949392919061224b565b602060405180830381865afa158015611bd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bf591906122c8565b611c34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2b90612352565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663664d8ac286866040518363ffffffff1660e01b8152600401611c8f92919061255a565b600060405180830381600087803b158015611ca957600080fd5b505af1158015611cbd573d6000803e3d6000fd5b505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611d2057600080fd5b60026003811115611d3457611d33612029565b5b6002600083815260200190815260200160002060010160009054906101000a900460ff166003811115611d6a57611d69612029565b5b14611d7457600080fd5b60036002600083815260200190815260200160002060010160006101000a81548160ff02191690836003811115611dae57611dad612029565b5b021790555050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611e1f82611df4565b9050919050565b611e2f81611e14565b8114611e3a57600080fd5b50565b600081359050611e4c81611e26565b92915050565b6000819050919050565b611e6581611e52565b8114611e7057600080fd5b50565b600081359050611e8281611e5c565b92915050565b600080600080600060a08688031215611ea457611ea3611def565b5b6000611eb288828901611e3d565b9550506020611ec388828901611e73565b9450506040611ed488828901611e73565b9350506060611ee588828901611e73565b9250506080611ef688828901611e73565b9150509295509295909350565b600060208284031215611f1957611f18611def565b5b6000611f2784828501611e73565b91505092915050565b600080600080600080600060e0888a031215611f4f57611f4e611def565b5b6000611f5d8a828b01611e73565b9750506020611f6e8a828b01611e73565b9650506040611f7f8a828b01611e73565b9550506060611f908a828b01611e73565b9450506080611fa18a828b01611e73565b93505060a0611fb28a828b01611e73565b92505060c0611fc38a828b01611e73565b91505092959891949750929550565b600060208284031215611fe857611fe7611def565b5b6000611ff684828501611e3d565b91505092915050565b61200881611e52565b82525050565b60006020820190506120236000830184611fff565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061206957612068612029565b5b50565b600081905061207a82612058565b919050565b600061208a8261206c565b9050919050565b61209a8161207f565b82525050565b60006020820190506120b56000830184612091565b92915050565b600080600080608085870312156120d5576120d4611def565b5b60006120e387828801611e73565b94505060206120f487828801611e73565b935050604061210587828801611e73565b925050606061211687828801611e73565b91505092959194509250565b6000806000806080858703121561213c5761213b611def565b5b600061214a87828801611e3d565b945050602061215b87828801611e73565b935050604061216c87828801611e73565b925050606061217d87828801611e73565b91505092959194509250565b6000806000606084860312156121a2576121a1611def565b5b60006121b086828701611e73565b93505060206121c186828701611e73565b92505060406121d286828701611e73565b9150509250925092565b60006040820190506121f16000830185611fff565b6121fe6020830184612091565b9392505050565b61220e81611e14565b82525050565b60006060820190506122296000830186612205565b6122366020830185611fff565b6122436040830184611fff565b949350505050565b60006080820190506122606000830187611fff565b61226d6020830186611fff565b61227a6040830185611fff565b6122876060830184611fff565b95945050505050565b60008115159050919050565b6122a581612290565b81146122b057600080fd5b50565b6000815190506122c28161229c565b92915050565b6000602082840312156122de576122dd611def565b5b60006122ec848285016122b3565b91505092915050565b600082825260208201905092915050565b7f496e76616c696420656c67616d61207369676e61747572650000000000000000600082015250565b600061233c6018836122f5565b915061234782612306565b602082019050919050565b6000602082019050818103600083015261236b8161232f565b9050919050565b7f4f6e6c79207468652070726f746f636f6c2063616e2063616c6c20746869732060008201527f66756e6374696f6e2e0000000000000000000000000000000000000000000000602082015250565b60006123ce6029836122f5565b91506123d982612372565b604082019050919050565b600060208201905081810360008301526123fd816123c1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061243e82611e52565b915061244983611e52565b925082820190508082111561246157612460612404565b5b92915050565b600060a08201905061247c6000830188611fff565b6124896020830187611fff565b6124966040830186611fff565b6124a36060830185611fff565b6124b06080830184611fff565b9695505050505050565b7f496e73756666696369656e7420636f6e74726163742062616c616e6365000000600082015250565b60006124f0601d836122f5565b91506124fb826124ba565b602082019050919050565b6000602082019050818103600083015261251f816124e3565b9050919050565b600061253182611e52565b915061253c83611e52565b925082820390508181111561255457612553612404565b5b92915050565b600060408201905061256f6000830185611fff565b61257c6020830184611fff565b9392505050565b7f5374617465206973206e6f74204c6f636b000000000000000000000000000000600082015250565b60006125b96011836122f5565b91506125c482612583565b602082019050919050565b600060208201905081810360008301526125e8816125ac565b9050919050565b7f496e76616c69642070726f746f636f6c20616464726573730000000000000000600082015250565b60006126256018836122f5565b9150612630826125ef565b602082019050919050565b6000602082019050818103600083015261265481612618565b9050919050565b7f496e73756666696369656e742066656500000000000000000000000000000000600082015250565b60006126916010836122f5565b915061269c8261265b565b602082019050919050565b600060208201905081810360008301526126c081612684565b9050919050565b60006040820190506126dc6000830185612205565b6126e96020830184611fff565b9392505050565b7f496e73756666696369656e74206465706f736974206665650000000000000000600082015250565b60006127266018836122f5565b9150612731826126f0565b602082019050919050565b6000602082019050818103600083015261275581612719565b905091905056fea2646970667358221220e40dd7c66f604db266b183d667778e0615521a1589aebe2ae84c5a56187d24d164736f6c63430008140033";

type MemberAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MemberAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MemberAccount__factory extends ContractFactory {
  constructor(...args: MemberAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _protocol: PromiseOrValue<string>,
    _cryptography: PromiseOrValue<string>,
    _pubKey: PromiseOrValue<BigNumberish>,
    _sendKey: PromiseOrValue<BigNumberish>,
    _receiveKey: PromiseOrValue<BigNumberish>,
    _signNonce: PromiseOrValue<BigNumberish>,
    _signerDepositFee: PromiseOrValue<BigNumberish>,
    _protocolFee: PromiseOrValue<BigNumberish>,
    _joinFee: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MemberAccount> {
    return super.deploy(
      _protocol,
      _cryptography,
      _pubKey,
      _sendKey,
      _receiveKey,
      _signNonce,
      _signerDepositFee,
      _protocolFee,
      _joinFee,
      overrides || {}
    ) as Promise<MemberAccount>;
  }
  override getDeployTransaction(
    _protocol: PromiseOrValue<string>,
    _cryptography: PromiseOrValue<string>,
    _pubKey: PromiseOrValue<BigNumberish>,
    _sendKey: PromiseOrValue<BigNumberish>,
    _receiveKey: PromiseOrValue<BigNumberish>,
    _signNonce: PromiseOrValue<BigNumberish>,
    _signerDepositFee: PromiseOrValue<BigNumberish>,
    _protocolFee: PromiseOrValue<BigNumberish>,
    _joinFee: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _protocol,
      _cryptography,
      _pubKey,
      _sendKey,
      _receiveKey,
      _signNonce,
      _signerDepositFee,
      _protocolFee,
      _joinFee,
      overrides || {}
    );
  }
  override attach(address: string): MemberAccount {
    return super.attach(address) as MemberAccount;
  }
  override connect(signer: Signer): MemberAccount__factory {
    return super.connect(signer) as MemberAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MemberAccountInterface {
    return new utils.Interface(_abi) as MemberAccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MemberAccount {
    return new Contract(address, _abi, signerOrProvider) as MemberAccount;
  }
}
