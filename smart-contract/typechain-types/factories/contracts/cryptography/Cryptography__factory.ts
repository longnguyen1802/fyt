/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Cryptography,
  CryptographyInterface,
} from "../../../contracts/cryptography/Cryptography";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_p",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_q",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_g",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_d",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_s",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "t1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "t2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "t3",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "t4",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "m",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "pusign",
        type: "uint256",
      },
    ],
    name: "blindAbeOkamotoMessage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "r",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "alpha",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "beta",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pusign",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "memberAddress",
        type: "address",
      },
    ],
    name: "blindSchnorrMessage",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "e0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "e",
            type: "uint256",
          },
        ],
        internalType: "struct BlindSchnorrSig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "k",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "m",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "prkey",
        type: "uint256",
      },
    ],
    name: "generateElgamaSignature",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prnonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "info",
        type: "uint256",
      },
    ],
    name: "prepareAbeOkamotoMessage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prnonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "e",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "prsign",
        type: "uint256",
      },
    ],
    name: "signAbeOkamotoMessage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prsign",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "K",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "e",
        type: "uint256",
      },
    ],
    name: "signBlindSchnorrMessage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "t1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "t2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "t3",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "t4",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "r",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    name: "unblindAbeOkamotoMessage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "s",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "alpha",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "e0",
        type: "uint256",
      },
    ],
    name: "unblindBlindSchnorrMessage",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "e0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "s0",
            type: "uint256",
          },
        ],
        internalType: "struct SchnorrSignature",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pusign",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "m",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "rho",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "omega",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sigma",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "delta",
        type: "uint256",
      },
    ],
    name: "verifyAbeOkamotoSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "m",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "r",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "s",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pukey",
        type: "uint256",
      },
    ],
    name: "verifyElgamaSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "e0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "s0",
            type: "uint256",
          },
        ],
        internalType: "struct SchnorrSignature",
        name: "sig",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "m",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "pusign",
        type: "uint256",
      },
    ],
    name: "verifySchnorrSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b50604051620018dc380380620018dc833981810160405281019062000037919062000173565b84608081815250508360a081815250508260c08181525050604051806060016040528060c0518152602001608051815260200160a051815250600080820151816000015560208201518160010155604082015181600201559050506040518060a00160405280608051815260200160a051815260200160c051815260200183815260200182815250600360008201518160000155602082015181600101556040820151816002015560608201518160030155608082015181600401559050506040518060400160405280608051815260200160c051815250600860008201518160000155602082015181600101559050505050505050620001fb565b600080fd5b6000819050919050565b6200014d8162000138565b81146200015957600080fd5b50565b6000815190506200016d8162000142565b92915050565b600080600080600060a0868803121562000192576200019162000133565b5b6000620001a2888289016200015c565b9550506020620001b5888289016200015c565b9450506040620001c8888289016200015c565b9350506060620001db888289016200015c565b9250506080620001ee888289016200015c565b9150509295509295909350565b60805160a05160c051611675620002676000396000610903015260005050600081816109250152818161097f015281816109ac01528181610a0001528181610a3f01528181610a7101528181610abc01528181610afb01528181610b2d0152610b5c01526116756000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80634f8c48f9116100715780634f8c48f9146101a1578063592e306d146101d157806371ddf93814610201578063730711cd14610231578063b6e1a7e114610261578063bdd384d814610292576100a9565b806306caf923146100ae5780630a8eb831146100de5780633437af191461010e57806338190d83146101405780634dc9f25c14610170575b600080fd5b6100c860048036038101906100c39190610e23565b6102c5565b6040516100d59190610e85565b60405180910390f35b6100f860048036038101906100f39190610fdf565b610311565b604051610105919061104d565b60405180910390f35b61012860048036038101906101239190611068565b6103b3565b604051610137939291906110a8565b60405180910390f35b61015a600480360381019061015591906110df565b610458565b604051610167919061104d565b60405180910390f35b61018a60048036038101906101859190610e23565b610547565b604051610198929190611181565b60405180910390f35b6101bb60048036038101906101b691906111aa565b6105f5565b6040516101c89190611263565b60405180910390f35b6101eb60048036038101906101e6919061127e565b6106e7565b6040516101f8919061104d565b60405180910390f35b61021b60048036038101906102169190610e23565b610772565b6040516102289190611314565b60405180910390f35b61024b6004803603810190610246919061132f565b6107c3565b6040516102589190610e85565b60405180910390f35b61027b60048036038101906102769190610e23565b6108f9565b604051610289929190611181565b60405180910390f35b6102ac60048036038101906102a791906113f9565b610bb9565b6040516102bc9493929190611486565b60405180910390f35b60008060020154600060020154806102e0576102df6114cb565b5b838609600060020154856102f49190611529565b6102fe919061155d565b6103089190611591565b90509392505050565b60008060006001015480610328576103276114cb565b5b61033c848760000151600060010154610c65565b61035460008001548860200151600060010154610c65565b09905060006001015484826040516020016103709291906115d1565b6040516020818303038152906040528051906020012060001c6103939190611591565b60006001015486600001516103a89190611591565b149150509392505050565b600080600080846040516020016103ca9190610e85565b6040516020818303038152906040528051906020012060001c905060006103fc60036002015488600360000154610c65565b9050600060036000015480610414576104136114cb565b5b61042984600360040154600360000154610c65565b6104426003600201546003800154600360000154610c65565b0990508181849550955095505050509250925092565b6000806003600001548061046f5761046e6114cb565b5b61047f8a87600360000154610c65565b61049460036002015489600360000154610c65565b0990506000600360000154806104ad576104ac6114cb565b5b6104bd8a86600360000154610c65565b6104d260036002015488600360000154610c65565b099050600082828b8b6040516020016104ee94939291906115fa565b6040516020818303038152906040528051906020012060001c90506003600101548161051a9190611591565b600360010154868961052c9190611529565b6105369190611591565b149350505050979650505050505050565b60008060006003600101546003600101546003600401546105689190611591565b600360010154876105799190611529565b610583919061155d565b61058d9190611591565b90506000600360010154600360010154600360010154806105b1576105b06114cb565b5b8785096105be9190611591565b600360010154896105cf9190611529565b6105d9919061155d565b6105e39190611591565b90508082935093505050935093915050565b6105fd610daa565b6000806001015480610612576106116114cb565b5b60006001015480610626576106256114cb565b5b6106446106398789600060010154610c65565b600060010154610c95565b61066661065b60008001548b600060010154610c65565b600060010154610c95565b09880990506000806001015484836040516020016106859291906115d1565b6040516020818303038152906040528051906020012060001c6106a89190611591565b9050604051806040016040528082815260200160006001015488846106cd9190611529565b6106d79190611591565b8152509250505095945050505050565b600080600860000154806106fe576106fd6114cb565b5b61070e8487600860000154610c65565b61071e8787600860000154610c65565b0990506000866040516020016107349190610e85565b6040516020818303038152906040528051906020012060001c90508161076560086001015483600860000154610c65565b1492505050949350505050565b61077a610dc4565b604051806040016040528083815260200160006002015485600060020154886107a39190611529565b6107ad919061155d565b6107b79190611591565b81525090509392505050565b600080600360000154806107da576107d96114cb565b5b600360000154806107ee576107ed6114cb565b5b6107fe858b600360000154610c65565b6108136003600201548d600360000154610c65565b098c09905060006003600001548061082e5761082d6114cb565b5b60036000015480610842576108416114cb565b5b610852888a600360000154610c65565b6108676003600201548c600360000154610c65565b098c09905060008282888860405160200161088594939291906115fa565b6040516020818303038152906040528051906020012060001c9050600360010154600360010154898c6108b89190611529565b6108c29190611591565b600360010154836108d39190611529565b6108dd919061155d565b6108e79190611591565b93505050509998505050505050505050565b60008060006109497f0000000000000000000000000000000000000000000000000000000000000000877f0000000000000000000000000000000000000000000000000000000000000000610c65565b905060008560405160200161095e9190610e85565b6040516020818303038152906040528051906020012060001c9050600060017f00000000000000000000000000000000000000000000000000000000000000006109a8919061155d565b60017f00000000000000000000000000000000000000000000000000000000000000006109d5919061155d565b806109e3576109e26114cb565b5b8488096109f09190611591565b9050600081831115610ab85760017f0000000000000000000000000000000000000000000000000000000000000000610a29919061155d565b80610a3757610a366114cb565b5b610a6d8a60017f0000000000000000000000000000000000000000000000000000000000000000610a68919061155d565b610c95565b60017f0000000000000000000000000000000000000000000000000000000000000000610a9a919061155d565b8486610aa6919061155d565b610ab09190611591565b099050610ba7565b60017f0000000000000000000000000000000000000000000000000000000000000000610ae5919061155d565b80610af357610af26114cb565b5b610b298a60017f0000000000000000000000000000000000000000000000000000000000000000610b24919061155d565b610c95565b60017f0000000000000000000000000000000000000000000000000000000000000000610b56919061155d565b858560017f0000000000000000000000000000000000000000000000000000000000000000610b85919061155d565b610b8f919061155d565b610b999190611529565b610ba39190611591565b0990505b83819550955050505050935093915050565b60008060008060006003600101548b610bd29190611591565b87610bdd9190611529565b905060006003600101548b610bf29190611591565b87610bfd9190611529565b905060006003600101548b610c129190611591565b6003800154610c219190611529565b905060006003600101548b610c369190611591565b600360040154610c469190611529565b9050838383839750975097509750505050509650965096509692505050565b6000806000610c75868686610d3f565b9150915081610c8957610c886012610d98565b5b80925050509392505050565b6000808203610ca75760009050610d39565b6000828481610cb957610cb86114cb565b5b0690506000839050600080600190505b60008414610d08576000848481610ce357610ce26114cb565b5b0490508481860285038096508195505050818183028403809350819450505050610cc9565b60018314610d1d576000945050505050610d39565b60008212610d2b5781610d32565b8160000386035b9450505050505b92915050565b60008060008303610d565760008091509150610d90565b60405160208152602080820152602060408201528560608201528460808201528360a08201526020600060c08360055afa92506000519150505b935093915050565b634e487b71600052806020526024601cfd5b604051806040016040528060008152602001600081525090565b604051806040016040528060008152602001600081525090565b6000604051905090565b600080fd5b6000819050919050565b610e0081610ded565b8114610e0b57600080fd5b50565b600081359050610e1d81610df7565b92915050565b600080600060608486031215610e3c57610e3b610de8565b5b6000610e4a86828701610e0e565b9350506020610e5b86828701610e0e565b9250506040610e6c86828701610e0e565b9150509250925092565b610e7f81610ded565b82525050565b6000602082019050610e9a6000830184610e76565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610eee82610ea5565b810181811067ffffffffffffffff82111715610f0d57610f0c610eb6565b5b80604052505050565b6000610f20610dde565b9050610f2c8282610ee5565b919050565b600060408284031215610f4757610f46610ea0565b5b610f516040610f16565b90506000610f6184828501610e0e565b6000830152506020610f7584828501610e0e565b60208301525092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fac82610f81565b9050919050565b610fbc81610fa1565b8114610fc757600080fd5b50565b600081359050610fd981610fb3565b92915050565b600080600060808486031215610ff857610ff7610de8565b5b600061100686828701610f31565b935050604061101786828701610fca565b925050606061102886828701610e0e565b9150509250925092565b60008115159050919050565b61104781611032565b82525050565b6000602082019050611062600083018461103e565b92915050565b6000806040838503121561107f5761107e610de8565b5b600061108d85828601610e0e565b925050602061109e85828601610e0e565b9150509250929050565b60006060820190506110bd6000830186610e76565b6110ca6020830185610e76565b6110d76040830184610e76565b949350505050565b600080600080600080600060e0888a0312156110fe576110fd610de8565b5b600061110c8a828b01610e0e565b975050602061111d8a828b01610e0e565b965050604061112e8a828b01610fca565b955050606061113f8a828b01610e0e565b94505060806111508a828b01610e0e565b93505060a06111618a828b01610e0e565b92505060c06111728a828b01610e0e565b91505092959891949750929550565b60006040820190506111966000830185610e76565b6111a36020830184610e76565b9392505050565b600080600080600060a086880312156111c6576111c5610de8565b5b60006111d488828901610e0e565b95505060206111e588828901610e0e565b94505060406111f688828901610e0e565b935050606061120788828901610e0e565b925050608061121888828901610fca565b9150509295509295909350565b61122e81610ded565b82525050565b60408201600082015161124a6000850182611225565b50602082015161125d6020850182611225565b50505050565b60006040820190506112786000830184611234565b92915050565b6000806000806080858703121561129857611297610de8565b5b60006112a687828801610e0e565b94505060206112b787828801610e0e565b93505060406112c887828801610e0e565b92505060606112d987828801610e0e565b91505092959194509250565b6040820160008201516112fb6000850182611225565b50602082015161130e6020850182611225565b50505050565b600060408201905061132960008301846112e5565b92915050565b60008060008060008060008060006101208a8c03121561135257611351610de8565b5b60006113608c828d01610e0e565b99505060206113718c828d01610e0e565b98505060406113828c828d01610e0e565b97505060606113938c828d01610e0e565b96505060806113a48c828d01610e0e565b95505060a06113b58c828d01610e0e565b94505060c06113c68c828d01610e0e565b93505060e06113d78c828d01610fca565b9250506101006113e98c828d01610e0e565b9150509295985092959850929598565b60008060008060008060c0878903121561141657611415610de8565b5b600061142489828a01610e0e565b965050602061143589828a01610e0e565b955050604061144689828a01610e0e565b945050606061145789828a01610e0e565b935050608061146889828a01610e0e565b92505060a061147989828a01610e0e565b9150509295509295509295565b600060808201905061149b6000830187610e76565b6114a86020830186610e76565b6114b56040830185610e76565b6114c26060830184610e76565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061153482610ded565b915061153f83610ded565b9250828201905080821115611557576115566114fa565b5b92915050565b600061156882610ded565b915061157383610ded565b925082820390508181111561158b5761158a6114fa565b5b92915050565b600061159c82610ded565b91506115a783610ded565b9250826115b7576115b66114cb565b5b828206905092915050565b6115cb81610fa1565b82525050565b60006040820190506115e660008301856115c2565b6115f36020830184610e76565b9392505050565b600060808201905061160f6000830187610e76565b61161c6020830186610e76565b6116296040830185610e76565b61163660608301846115c2565b9594505050505056fea26469706673582212206a99ceaaa0da13443e408b4813f65a14067adaa7c4d9f2961a86da73c9af869f64736f6c63430008140033";

type CryptographyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CryptographyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Cryptography__factory extends ContractFactory {
  constructor(...args: CryptographyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _p: PromiseOrValue<BigNumberish>,
    _q: PromiseOrValue<BigNumberish>,
    _g: PromiseOrValue<BigNumberish>,
    _d: PromiseOrValue<BigNumberish>,
    _s: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Cryptography> {
    return super.deploy(
      _p,
      _q,
      _g,
      _d,
      _s,
      overrides || {}
    ) as Promise<Cryptography>;
  }
  override getDeployTransaction(
    _p: PromiseOrValue<BigNumberish>,
    _q: PromiseOrValue<BigNumberish>,
    _g: PromiseOrValue<BigNumberish>,
    _d: PromiseOrValue<BigNumberish>,
    _s: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_p, _q, _g, _d, _s, overrides || {});
  }
  override attach(address: string): Cryptography {
    return super.attach(address) as Cryptography;
  }
  override connect(signer: Signer): Cryptography__factory {
    return super.connect(signer) as Cryptography__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CryptographyInterface {
    return new utils.Interface(_abi) as CryptographyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Cryptography {
    return new Contract(address, _abi, signerOrProvider) as Cryptography;
  }
}
