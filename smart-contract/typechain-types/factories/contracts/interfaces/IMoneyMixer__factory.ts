/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IMoneyMixer,
  IMoneyMixerInterface,
} from "../../../contracts/interfaces/IMoneyMixer";

const _abi = [
  {
    inputs: [],
    name: "doValidityCheck",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "e",
        type: "uint256",
      },
    ],
    name: "getSendMessageIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "moveToReceivePhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "moveToSignPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "moveToValidityCheckPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "money",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rho",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "delta",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "omega",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sigma",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "signerPubKey",
        type: "uint256",
      },
    ],
    name: "recordReceiveTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "e",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "r",
        type: "uint256",
      },
    ],
    name: "recordSendSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "e",
        type: "uint256",
      },
    ],
    name: "recordSendTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "resetPhaseControl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "spendReceiveTransactionMoney",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IMoneyMixer__factory {
  static readonly abi = _abi;
  static createInterface(): IMoneyMixerInterface {
    return new utils.Interface(_abi) as IMoneyMixerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMoneyMixer {
    return new Contract(address, _abi, signerOrProvider) as IMoneyMixer;
  }
}
