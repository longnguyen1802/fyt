/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ICryptography,
  ICryptographyInterface,
} from "../../../contracts/interfaces/ICryptography";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "t1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "t2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "t3",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "t4",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "m",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "blindAbeOkamotoMessage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "r",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "alpha",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "beta",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "m",
        type: "address",
      },
    ],
    name: "blindSchnorrMessage",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "e0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "e",
            type: "uint256",
          },
        ],
        internalType: "struct BlindSchnorrSig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "u",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "info",
        type: "uint256",
      },
    ],
    name: "prepareAbeOkamotoMessage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "u",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "e",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "signAbeOkamotoMessage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prk",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "K",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "e",
        type: "uint256",
      },
    ],
    name: "signBlindSchnorrMessage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "t1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "t2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "t3",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "t4",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "r",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    name: "unblindAbeOkamotoMessage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "s",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "alpha",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "e0",
        type: "uint256",
      },
    ],
    name: "unblindBlindSchnorrMessage",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "e0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "s0",
            type: "uint256",
          },
        ],
        internalType: "struct SchnorrSignature",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "m",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "rho",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "omega",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sigma",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "delta",
        type: "uint256",
      },
    ],
    name: "verifyAbeOkamotoSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "m",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "r",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "s",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "verifyElgamaSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "e0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "s0",
            type: "uint256",
          },
        ],
        internalType: "struct SchnorrSignature",
        name: "sig",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "m",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "pk",
        type: "uint256",
      },
    ],
    name: "verifySchnorrSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ICryptography__factory {
  static readonly abi = _abi;
  static createInterface(): ICryptographyInterface {
    return new utils.Interface(_abi) as ICryptographyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ICryptography {
    return new Contract(address, _abi, signerOrProvider) as ICryptography;
  }
}
